{"mode":"Text","hardwareTarget":"brain","textContent":"import time\nfrom vex import *\n\nbrain = Brain()\ncontroller = Controller()\n\nmotor_left_front = Motor(Ports.PORT1, GearSetting.RATIO_1_1, False)\nmotor_right_front = Motor(Ports.PORT6, GearSetting.RATIO_1_1, True)\nmotor_left_back = Motor(Ports.PORT7, GearSetting.RATIO_1_1, False)\nmotor_right_back = Motor(Ports.PORT12, GearSetting.RATIO_1_1, True)\n\nbrain_inertial = Inertial()\n\ndef print_wrapped(text, line_length=12):\n    words = text.split()\n    current_line = \"\"\n    for word in words:\n        if len(current_line) + len(word) + 1 > line_length:\n            brain.screen.print(current_line + \"-\")\n            brain.screen.new_line()\n            current_line = word + \" \"\n        else:\n            current_line += word + \" \"\n    brain.screen.print(current_line.strip())\n\nbrain.screen.clear_screen()\nbrain.screen.set_cursor(1, 1)\nprint_wrapped(\"Calibrating Inertial...\")\nbrain_inertial.calibrate()\nwhile brain_inertial.is_calibrating():\n    wait(0.1, SECONDS)\nbrain.screen.clear_screen()\nbrain.screen.set_cursor(1, 1)\nprint_wrapped(\"Calibration complete\")\n\ndef drive_with_joysticks():\n    target_heading = 0\n    heading_lock = False\n\n    while True:\n        if controller.buttonLUp.pressing():\n            heading_lock = True\n            target_heading = brain_inertial.heading(DEGREES)\n            brain.screen.clear_screen()\n            brain.screen.set_cursor(1, 1)\n            print_wrapped(\"Heading lock ON\")\n            brain.screen.set_cursor(2, 1)\n            print_wrapped(\"Target Heading: {:.2f}\".format(target_heading))\n            time.sleep(0.5) \n\n        if controller.buttonLDown.pressing():\n            heading_lock = False\n            brain.screen.clear_screen()\n            brain.screen.set_cursor(1, 1)\n            print_wrapped(\"Heading lock OFF\")\n            time.sleep(0.5) \n\n        forward = controller.axisA.position()\n        strafe = controller.axisD.position() if not heading_lock else 0\n\n        correction = 0\n        if heading_lock:\n            current_heading = brain_inertial.heading(DEGREES)\n            error = target_heading - current_heading\n            if error > 180:\n                error -= 360\n            elif error < -180:\n                error += 360\n            correction = error * 1.5 \n\n        left_velocity = forward - strafe - correction\n        right_velocity = forward + strafe + correction\n\n        left_velocity = max(min(left_velocity, 100), -100)\n        right_velocity = max(min(right_velocity, 100), -100)\n\n        motor_left_front.set_velocity(left_velocity, PERCENT)\n        motor_left_back.set_velocity(left_velocity, PERCENT)\n        motor_right_front.set_velocity(right_velocity, PERCENT)\n        motor_right_back.set_velocity(right_velocity, PERCENT)\n\n        motor_left_front.spin(FORWARD)\n        motor_left_back.spin(FORWARD)\n        motor_right_front.spin(FORWARD)\n        motor_right_back.spin(FORWARD)\n\n        brain.screen.set_cursor(3, 1)\n        print_wrapped(\"Current Heading: {:.2f}\".format(brain_inertial.heading(DEGREES)))\n\n        wait(0.05, SECONDS)\n\ndrive_with_joysticks()","textLanguage":"python","robotConfig":[],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"Second","v5SoundsEnabled":false}